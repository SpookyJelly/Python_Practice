#2116번 자리배정

"""
어떤 공연장에는 가로로 C개, 세로로 R개의 좌석이 C×R격자형으로 배치되어 있다.
각 좌석의 번호는 해당 격자의 좌표 (x,y)로 표시된다.

가장 왼쪽 아래의 좌석번호는 (1,1)이며, 가장 오른쪽 위 좌석의 번호는 (7,6)이다.

우리는 대기번호를 가진 사람들에 대하여 (1,1)위치 좌석부터 시작하여
시계방향으로 돌아가면서 비어있는 좌석에 관객을 순서대로 배정한다.

여러분은 공연장의 크기를 나타내는 자연수 C와 R이 주어져 있을 때,
대기 순서가 K인 관객에게 배정될 좌석 번호 (x,y)를 찾는 프로그램을 작성해야 한다.

입력
첫 줄에는 공연장의 격자 크기를 나타내는 정수 C와 R이 하나의 공백을 사이에 두고 차례대로 주어진다.
두 값의 범위는 5 ≤ C, R ≤ 1,000이다.
그 다음 줄에는 어떤 관객의 대기번호 K가 주어진다. 단 1 ≤ K ≤ 100,000,000이다.


출력
입력으로 제시된 대기번호 K인 관객에게 배정될 좌석번호 (x,y)를 구해서 두 값,
x와 y를 하나의 공백을 사이에 두고 출력해야 한다. 만일 모든 좌석이 배정되어
해당 대기번호의 관객에게 좌석을 배정할 수 없는 경우에는 0(숫자 영)을 출력해야 한다.

"""

# 그럼 결국 그거네. 달팽이 문제의 변형

# 가로 세로가 다른 달팽이
def snail(N,M):
#N = 7  # 한 리스트(행)에 포함되어 있는 요소의 갯수
#M = 6  # 전체 리스트에 행이 몇개인지 (열)의 갯수

    arr = [[0] * N for x in range(M)]
    row = M  # row는 음의 방향이므로,
    col = 0  # col은 (행(리스트)의 요소들은 양의 방향이므로)
    cnt = 1
    switch = 1
    while N > 0 and M > 0:  # 둘 중 하나가 앵꼬나는 순간 끝
        # 세로를 입력하는 달팽이
        for __ in range(1, M + 1):
            row -= switch
            arr[row][col] = cnt
            cnt += 1

        # 한행,한열을 풀로 입력할때마다 다음 달팽이는 자신의 최대 길이에서 1을 감소한 만큼 입력해야함
        # (비록 자신의 타입과 다르더라도)
        # 그러니까, 쭉 입력만 되면, 일단 -1 하고 시작
        N -= 1
        M -= 1
        switch *= -1
        # 가로를 입력하는 달팽이
        for _ in range(1, N + 1):
            col -= switch
            arr[row][col] = cnt
            cnt += 1

    return arr

# 문제 요청 대로 뽑은 달팽이.

# 이제 달팽이에서 숫자를 찾는 식으로 진행하자.


C, R = list(map(int,input().split()))
K = int(input())

arr = snail(C,R)


# 아 시발 find 쓰고 싶네 진짜
# maxi라는 최대값 저장 변수 만들어야지 뭐
maxi = 0
for c in range(len(arr)):
    for r in range(len(arr[c])):
        if arr[c][r] > maxi:
            maxi = arr[c][r]

        if arr[c][r] == K:
            print(r + 1, len(arr) - c)
            break

if maxi < K:
    print(0)