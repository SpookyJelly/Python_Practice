#1477 휴게소 세우기

# 다솜이는 유료 고속도로를 가지고 있다. 다솜이는 현재 고속도로에 휴게소를 N개 가지고 있는데, 
# 휴게소의 위치는 고속도로의 시작으로부터 얼만큼 떨어져 있는지로 주어진다. 다솜이는 지금 휴게소를 M개 더 세우려고 한다.

# 다솜이는 이미 휴게소가 있는 곳에 휴게소를 또 세울 수 없고, 
# 고속도로의 끝에도 휴게소를 세울 수 없다. 휴게소는 정수 위치에만 세울 수 있다.

# 다솜이는 이 고속도로를 이용할 때, 모든 휴게소를 방문한다. 
# 다솜이는 휴게소를 M개 더 지어서 휴게소가 없는 구간의 길이의 최댓값을 최소로 하려고 한다. (반드시 M개를 모두 지어야 한다.)

# 예를 들어, 고속도로의 길이가 1000이고, 현재 휴게소가 {200, 701, 800}에 있고, 휴게소를 1개 더 세우려고 한다고 해보자.

# 일단, 지금 이 고속도로를 타고 달릴 때, 휴게소가 없는 구간의 최댓값은 200~701구간인 501이다. 
# 하지만, 새로운 휴게소를 451구간에 짓게 되면, 최대가 251이 되어서 최소가 된다.

# 입력
# 첫째 줄에 현재 휴게소의 개수 N, 더 지으려고 하는 휴게소의 개수 M, 고속도로의 길이 L이 주어진다. 
# N은 100보다 작거나 같으며, M도 100보다 작거나 같다. L은 100보다 크거나 같고, 1000보다 작거나 같은 정수이다. 
# 모든 휴게소의 위치는 중복되지 않으며, N+M은 L보다 작다. 둘째 줄에, 휴게소의 위치가 공백을 사이에 두고 주어진다.

# 출력
# 첫째 줄에 M개의 휴게소를 짓고 난 후에 휴게소가 없는 구간의 최댓값의 최솟값을 출력한다.

# N,M,L = map(int,input().split()) # N : 휴게소의 갯수 , M : 더 지으려고 하는 휴게소의 개수 , 고속도로의 길이 : L
N,M,L = 6,7,800
# rest_area = list(map(int,input().split()))
rest_area = [622,411,201,555,755,82]

rest_area.sort()

rest_area = [0]+rest_area+[L]

left = 1 # 초기 left 값
right = rest_area[-1] - rest_area[0] # 초기 right 값
ans = 0
while left<=right:

	mid = (left+right) //2 # 임시 정답 (최소의 최대값)
	cnt = 0
	min_len = float('inf')
	for area in rest_area:
		# 최소의 최대값보다 지금과 다음 휴게소의 거리가 더 길다 --> 수정 필요
		if area - current >= mid:
			# 가상으로 휴게소 추가한다고 생각하자. 어짜피 for문 쭉쭉 나가면 이전에 휴게소가 추가되었든 말든 관계 없으니까
			# 현재 휴게소와 current 사이에 휴게소를 하나 신설했다손 치고, 그 사이의 거리를 min_len이라고 한다 
			# 그러면 확실히 휴게소 공백거리는 짧아졌겠지?
			min_len = min((area - ((area - current)//2)),min_len)
			current = area # 이후 값 최신화
			cnt += 1 # 휴게소 신설됬다는 뜻
	
	if cnt >= M: # 휴게소가 더 많이 설치되었다. mid를 늘릴 필요가 있다 --> 설치 조건을 좀 더 빡빡하게
		left = mid + 1
		ans = min_len
	else: # 휴게소가 덜 설치되었다. mid를 줄일 필요가 있다 --> 설치 조건을 좀 완화
		right = mid - 1

print(ans)

